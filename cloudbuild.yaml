steps:
  - name: "hashicorp/terraform:1.6"
    id: infra
    entrypoint: "/bin/sh"
    args:
      - "-e"
      - "-o"
      - "pipefail"
      - "-c"
      - |
        terraform init
        terraform apply -auto-approve
        echo PROJECT_ID=$(terraform output -raw project_id) > /workspace/.env
        echo REGION=$(terraform output -raw region) >> /workspace/.env
        echo DATA_BUCKET = $(terraform output -raw gcs_dataset_bucket) >> /workspace/.env
        echo BQ_DATASET=$(terraform output -raw dataset_name) >> /workspace/.env
        echo BQ_TABLE=$(terraform output -raw bq_table) >> /workspace/.env
        echo FS_NAME=$(terraform output -raw fs_name) >> /workspace/.env
        echo FS_ENTITY_NAME=$(terraform output -raw fs_entity_name) >> /workspace/.env
        echo ENDPOINT=$(terraform output -raw vertex_endpoint) >> /workspace/.env
    dir: "terraform"

  - name: "python:3.10"
    id: preprocess
    entrypoint: "bash"
    args:
      - "-c"
      - |
        export GOOGLE_APPLICATION_CREDENTIALS="../terraform/gcp-creds.json"
        pip install -r pipeline-req.txt
        python preprocess-pipeline.py
    env:
      - "SERVICE_ACCOUNT=mlops-tutorial@mlops-project-401617.iam.gserviceaccount.com"
    dir: "scripts"

  - name: "python:3.10"
    id: vertex
    entrypoint: "bash"
    args:
      - "-c"
      - |
        export GOOGLE_APPLICATION_CREDENTIALS="../terraform/gcp-creds.json"
        pip install -r pipeline-req.txt
        python pipeline.py
    env:
      - "SERVICE_ACCOUNT=mlops-tutorial@mlops-project-401617.iam.gserviceaccount.com"
    dir: "scripts"

build:
  logs_bucket: ci-cd-logs-bucket
# options:
#   logging: CLOUD_LOGGING_ONLY
